Index: api/db_conn.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/db_conn.php b/api/db_conn.php
new file mode 100644
--- /dev/null	(date 1668918221116)
+++ b/api/db_conn.php	(date 1668918221116)
@@ -0,0 +1,20 @@
+<?php
+class db {
+    private $servername = "localhost";
+    private $username   = "root";
+    private $db         = "db_test";
+    private $password   = "";
+    public function connect(){
+        $this->conn = null;
+        try {
+            $this->conn = new PDO("mysql:host=".$this->servername.";dbname=".$this->db."", $this->username, $this->password);
+            $this->conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
+        }catch(PDOException $e){
+            echo "Connection failed: " . $e->getMessage();
+        }
+        return $this->conn;
+    }
+}
+?>
+
+
Index: api.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api.php b/api.php
new file mode 100644
--- /dev/null	(date 1668941685505)
+++ b/api.php	(date 1668941685505)
@@ -0,0 +1,5 @@
+<?php
+    require_once 'auth/auth_api.php';
+    require_once 'api/db_conn.php';
+    require_once 'routes/route_api.php';
+?>
\ No newline at end of file
Index: assets/js/search/courses_search.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/js/search/courses_search.js b/assets/js/search/courses_search.js
new file mode 100644
--- /dev/null	(date 1668917996929)
+++ b/assets/js/search/courses_search.js	(date 1668917996929)
@@ -0,0 +1,31 @@
+document.querySelector('#filter').addEventListener('input', (e) => filterData(e.target.value))
+function filterData(search) {
+    axios
+        .get("api/courses/search", {
+            params: {
+                name: search.toLowerCase()
+            }
+        })
+        .then((res) => {
+            var results = res.data
+            if(results.message){
+                document.querySelector('#show').innerHTML = ''
+            }
+            else {
+                results.forEach((product) => {
+                    document.querySelector('#show').innerHTML = `
+                        <div class="product">
+                            <img src="assets/uploads/courses/${product.image_course}" width="50px" height="50px" alt="">
+                            <div class="product-detail">
+                                <h4>${product.name_course.slice(0, 30)}</h4>
+                                <p>$${product.price_course}</p>
+                            </div>
+                        </div>
+                   `
+                })
+            }
+        })
+        .catch((error) => {
+            console.error(error);
+        });
+}
\ No newline at end of file
Index: routes/route_api.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/routes/route_api.php b/routes/route_api.php
new file mode 100644
--- /dev/null	(date 1668945686627)
+++ b/routes/route_api.php	(date 1668945686627)
@@ -0,0 +1,45 @@
+<?php
+    // tạo jwt
+    $payload = array (
+        'name'  => 'Nguyen Duc',
+        'phone' => '0823565831',
+        'email' => 'nguyenduc10603@gmail.com',
+        'admin' => true,
+        'exp'   => time() + (86400 * 10)
+    );
+    $jwt = generate_jwt($payload);
+    $bearer_token = get_bearer_token();
+    if(empty($bearer_token)){
+        echo json_encode(array(
+            'error' => 'Access denied !',
+        ));
+    }else {
+        $is_jwt_valid = is_jwt_valid($bearer_token);
+        if($is_jwt_valid == true) {
+            $auth = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTmd1eWVuIER1YyIsInBob25lIjoiMDgyMzU2NTgzMSIsImVtYWlsIjoibmd1eWVuZHVjMTA2MDNAZ21haWwuY29tIiwiYWRtaW4iOnRydWUsImV4cCI6MTY2OTgwNTQ4Nn0.PByr6NO_lYgDSnT-KkW0bLBgsNzfIySHO_IofdxiHsw';
+            if($bearer_token == $auth) {
+                if (isset($_GET['module'])) {
+                    $module = $_GET['module'];
+                    switch ($module){
+                        case 'categories':
+                            include_once 'api/module/'.$module.'.php';
+                            include_once 'api/component/'.$module.'.php';
+                            break;
+                        case 'courses':
+                            include_once 'api/module/'.$module.'.php';
+                            include_once 'api/component/'.$module.'.php';
+                            break;
+                    }
+                }
+            } else {
+                echo json_encode(array(
+                    'error' => 'Access denied !'
+                ));
+            }
+        } else {
+            echo json_encode(array(
+                'error' => 'Access denied !'
+            ));
+        }
+    }
+?>
\ No newline at end of file
Index: api/module/courses.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/module/courses.php b/api/module/courses.php
new file mode 100644
--- /dev/null	(date 1668916289313)
+++ b/api/module/courses.php	(date 1668916289313)
@@ -0,0 +1,68 @@
+<?php
+class Courses {
+    public function __construct($db){
+        $this->conn = $db;
+    }
+    public function read(){
+        $sql = "SELECT * FROM courses";
+        $stmt = $this->conn->prepare($sql);
+        $stmt->execute();
+        return $stmt;
+    }
+    public function show(){
+        $sql = "SELECT * FROM categories WHERE id = ? LIMIT 1";
+        $stmt = $this->conn->prepare($sql);
+        $stmt->bindParam(1,$this->id);
+        $stmt->execute();
+        $row = $stmt->fetch(PDO::FETCH_ASSOC);
+        $this->name_category = $row['name_category'];
+    }
+    public function create(){
+        $query = "INSERT INTO categories SET name_category=:name";
+        $stmt = $this->conn->prepare($query);
+        // clean data
+        $this->name = htmlspecialchars(strip_tags($this->name));
+        // bind data
+        $stmt->bindParam(':name', $this->name);
+        if($stmt->execute()) {
+            return true;
+        }
+        printf("Error %s.\n", $stmt->error);
+        return false;
+    }
+    public function update(){
+        $query = "UPDATE categories SET name_category=:name WHERE id=:id";
+        $stmt = $this->conn->prepare($query);
+        // clean data
+        $this->id = htmlspecialchars(strip_tags($this->id));
+        $this->name = htmlspecialchars(strip_tags($this->name));
+        // bind data
+        $stmt->bindParam(':id', $this->id);
+        $stmt->bindParam(':name', $this->name);
+        if($stmt->execute()) {
+            return true;
+        }
+        printf("Error %s.\n", $stmt->error);
+        return false;
+    }
+    public function delete(){
+        $query = "DELETE FROM categories WHERE id=:id";
+        $stmt = $this->conn->prepare($query);
+        // clean data
+        $this->id = htmlspecialchars(strip_tags($this->id));
+        // bind data
+        $stmt->bindParam(':id', $this->id);
+        if($stmt->execute()) {
+            return true;
+        }
+        printf("Error %s.\n", $stmt->error);
+        return false;
+    }
+    public function search($key){
+        $sql = "SELECT * FROM courses  WHERE name_course LIKE '%$key%'";
+        $stmt = $this->conn->prepare($sql);
+        $stmt->execute();
+        return $stmt;
+    }
+}
+?>
\ No newline at end of file
Index: controllers/admin/coursesController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n    if(isset($_GET['act'])){\r\n        $act = $_GET['act'];\r\n        switch ($act) {\r\n            case \"create\":\r\n                if(count_category() == 0){\r\n                    die(alert(\"Chưa có danh mục. Không thể tạo khóa học!\",COURSES));\r\n                }\r\n                if(count_teacher() == 0){\r\n                    die(alert(\"Chưa có giảng viên. Không thể tạo khóa học!\",COURSES));\r\n                }\r\n                $category_read = category_read();\r\n                $teacher_read = teacher_read();\r\n                include_once $direct_act;\r\n                break;\r\n            case \"store\":\r\n                // lấy dữ liệu từ form\r\n                $name_course            = $_POST['name_course'];\r\n                $price_course           = $_POST['price_course'];\r\n                $image_course           = $_FILES['image_course']['name'];\r\n                $description_course     = $_POST['description_course'];\r\n                $quote                  = $_POST['quote'];\r\n                $created_at             = date(\"Y-m-d H:i:s\");\r\n                $id_category            = $_POST['id_category'];\r\n                $id_teacher             = $_POST['id_teacher'];\r\n                // set đường dẫn\r\n                $redirect = COURSES.\"/create\";\r\n                // hàm check_empty sẽ kiểm tra xem dữ liệu có rỗng không, nếu rỗng sẽ điều hướng về trang đã khai báo redirect bên trên\r\n                check_empty($name_course            ,$redirect);\r\n                check_empty($price_course           ,$redirect);\r\n                check_empty($image_course           ,$redirect);\r\n                check_empty($description_course     ,$redirect);\r\n                check_empty($quote                  ,$redirect);\r\n                check_empty($id_category            ,$redirect);\r\n                check_empty($id_teacher             ,$redirect);\r\n                check_data(check_name_course($name_course,$id_teacher),COURSES.'/create');\r\n                // sau khi pass qua kiểm tra sẽ thực hiện insert vào db và lưu ảnh vào thư mục\r\n                // lưu file ảnh, field: name input file ở form thêm, name_dir: là tên của mục đang làm\r\n                save_file('image_course', 'courses');\r\n                // Gọi model để thêm dữ liệu vào database\r\n               courses_create($name_course,$price_course,$image_course,$description_course,$quote,$created_at,$id_category,$id_teacher);\r\n                // sau khi thêm hoàn thành sẽ điều hướng về trang read\r\n                location(COURSES);\r\n                break;\r\n            case \"update\":\r\n                $id = $_GET['id'];\r\n                check_empty($id,COURSES);\r\n                $courses_update = course_detail($id);\r\n                $category_read  = category_read();\r\n                $teacher_read   = teacher_read();\r\n                include_once $direct_act;\r\n                break;\r\n            case \"edit\":\r\n                // Lấy id từ trên url và kiểm tra\r\n                $id = $_GET['id'];\r\n                // nếu k tồn tại id thì trả lại view read\r\n                check_empty($id,COURSES);\r\n                // nếu tồn tại thì nhận dữ liệu từ form\r\n                $status_course          = $_POST['status_course'];\r\n                $name_course            = $_POST['name_course'];\r\n                $price_course           = $_POST['price_course'];\r\n                $description_course     = $_POST['description_course'];\r\n                $quote                  = $_POST['quote'];\r\n                $created_at             = $_POST['created_at'];\r\n                $updated_at             = date(\"Y-m-d H:i:s\");\r\n                $id_category            = $_POST['id_category'];\r\n                $id_teacher             = $_POST['id_teacher'];\r\n                // gọi fn chi tiết để kiểm tra dữ liệu\r\n                $course_detail          = course_detail($id);\r\n                // kiểm tra ảnh\r\n                // Nếu ảnh up lên giống ảnh gốc thì sẽ up lại ảnh cũ,ngược lại thì up ảnh mới và lưu vào thư mục\r\n                $image_goc              = $course_detail['image_course'];\r\n                $image_up               = $_FILES['image_course']['name'];\r\n                if (empty($image_up)) {\r\n                    $image_course = $image_goc;\r\n                } else {\r\n                    $image_course = $image_up;\r\n                    save_file('image_course', 'courses');\r\n                }\r\n                // nếu tên đổi - gv k đổi\r\n                if($name_course != $course_detail['name_course']){\r\n                    check_data(check_name_course($name_course,$course_detail['id_teacher']),COURSES.'/update/'.$id);\r\n                }\r\n                // nếu tên k đổi - gv đổi\r\n                elseif($id_teacher != $course_detail['id_teacher']){\r\n                    check_data(check_name_course($name_course,$id_teacher),COURSES.'/update/'.$id);\r\n                }\r\n                // nếu tên vs id gv k đổi\r\n                courses_update($name_course,$price_course,$image_course,$status_course,$description_course,$quote,$created_at,$updated_at,$id_category,$id_teacher,$id);\r\n                location(COURSES);\r\n                break;\r\n            case \"destroy\":\r\n                // Lấy id từ trên url và kiểm tra\r\n                $id = $_GET['id'];\r\n                // nếu k tồn tại id thì trả lại view read\r\n                check_empty($id,COURSES);\r\n                // Khi pass qua validate => gọi model thực hiện delete\r\n                course_delete($id);\r\n                // delete hoàn thành, điều hướng về trang danh sách\r\n                location(COURSES);\r\n                break;\r\n            case \"detail\":\r\n                // Lấy id từ trên url và kiểm tra\r\n                $id = $_GET['id'];\r\n                // nếu k tồn tại id thì trả lại view read\r\n                check_empty($id,COURSES);\r\n                // Nếu tồn tại thì gọi model chi tiết để lấy thông tin và trả về giao diện chi tiết\r\n                $courses_detail = course_detail($id);\r\n                include_once $direct_act;\r\n                break;\r\n            default:\r\n                // khi nhập linh tinh thì sẽ điều hướng về trang 404\r\n                location($host.\"page_not_found\");\r\n                break;\r\n        }\r\n    }else {\r\n        if(isset($_GET['course'])){\r\n            check_empty($_GET['course'],COURSES);\r\n            $courses_read   = course_search($_GET['course']);\r\n        }else {\r\n            $courses_read   = courses_read();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        $category_read  = category_read();\r\n        $teacher_read   = teacher_read();\r\n        include_once $direct_read;\r\n    }\r\n?>\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/admin/coursesController.php b/controllers/admin/coursesController.php
--- a/controllers/admin/coursesController.php	(revision 74c2ba16defc0bb4dbc0aca29ff05a57b4a2fb93)
+++ b/controllers/admin/coursesController.php	(date 1668864552909)
@@ -120,11 +120,6 @@
         }else {
             $courses_read   = courses_read();
         }
-
-
-
-
-
         $category_read  = category_read();
         $teacher_read   = teacher_read();
         include_once $direct_read;
Index: api/component/categories.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/component/categories.php b/api/component/categories.php
new file mode 100644
--- /dev/null	(date 1668941821165)
+++ b/api/component/categories.php	(date 1668941821165)
@@ -0,0 +1,100 @@
+<?php
+header('Content-Type: application/json');
+header('Access-Control-Allow-Headers: Access-Control-Allow-Headers,Content-Type,Access-Control-Allow-Methods.Authorization,X-Requested-With');
+class request_categories {
+    public function read(){
+        header('Access-Control-Allow-Methods: GET');
+        $data = new Categories((new db())->connect());
+        $read = $data->read();
+        $num  = $read->rowCount();
+        if($num > 0){
+            $data_array = [];
+            while($row = $read->fetch(PDO::FETCH_ASSOC)){
+                extract($row);
+                $data_item = array(
+                    'id'    => $id,
+                    'name'  => $name_category
+                );
+                array_push($data_array,$data_item);
+            }
+            return html_entity_decode( json_encode($data_array, JSON_UNESCAPED_UNICODE) );
+        }
+    }
+    public function create(){
+        header('Access-Control-Allow-Methods: POST');
+        $data = new Categories((new db())->connect());
+        $result = json_decode(file_get_contents("php://input"));
+        $data->name = $result->name;
+        if($data->create()){
+            return json_encode(array('message' => 'Created successfully'));
+        }
+        else {
+            return json_encode(array('message' => "Don't create !"));
+        }
+    }
+    public function update(){
+        header('Access-Control-Allow-Methods: PUT');
+        $data = new Categories((new db())->connect());
+        $result = json_decode(file_get_contents("php://input"));
+        $data->id 	= $result->id;
+        $data->name = $result->name;
+        if($data->update()){
+            return json_encode(array('message' => 'Update successfully'));
+        }
+        else {
+            return json_encode(array('message' => "Don't Update !"));
+        }
+    }
+    public function delete(){
+        header('Access-Control-Allow-Methods: DELETE');
+        $data = new Categories((new db())->connect());
+        $result = json_decode(file_get_contents("php://input"));
+        $data->id = $result->id;
+        if($data->delete()){
+            return json_encode(array('message' => 'Delete successfully'));
+        }
+        else {
+            return json_encode(array('message' => "Don't delete !"));
+        }
+    }
+    public function detail(){
+        header('Access-Control-Allow-Methods: GET');
+        $result     = json_decode(file_get_contents("php://input"));
+        $data       = new Categories((new db())->connect());
+        $data->id   = $result->id;
+        $check      = $data->check_id();
+        if(isset($check)){
+            return json_encode(array('message' => $check));
+        }
+        else {
+            $data->show();
+            $data_item = array(
+                'id'    => $data->id,
+                'name'  => $data->name_category
+            );
+            return html_entity_decode( json_encode($data_item, JSON_UNESCAPED_UNICODE) );
+        }
+    }
+}
+    if(isset($_GET['act'])){
+        $act = $_GET['act'];
+        if($act == 'post'){
+            echo (new request_categories)->create();
+        }
+        else if($act == 'update'){
+            echo (new request_categories)->update();
+        }
+        else if($act == 'delete'){
+            echo (new request_categories)->delete();
+        }
+        else if($act == 'detail'){
+            echo (new request_categories)->detail();
+        }
+        else {
+            echo json_encode(array('message' => "Don't handle API !"));
+        }
+    }
+    else {
+        print_r((new request_categories)->read());
+    }
+?>
Index: check_api.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/check_api.php b/check_api.php
new file mode 100644
--- /dev/null	(date 1668945752423)
+++ b/check_api.php	(date 1668945752423)
@@ -0,0 +1,58 @@
+    <header>
+        <h4 class="title">Live Product Filter</h4>
+        <div class="form-input">
+            <i class="fas fa-search"></i>
+            <input
+                type="text"
+                id="filter"
+                placeholder="Tìm sản phẩm mong muốn..."
+            />
+        </div>
+    </header>
+    <div class="products" id="show">
+    </div>
+    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
+<!--    <script src="assets/js/search/courses_search.js"></script>-->
+    <script>
+        document.querySelector('#filter').addEventListener('input', (e) => filterData(e.target.value))
+        var auth = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTmd1eWVuIER1YyIsInBob25lIjoiMDgyMzU2NTgzMSIsImVtYWlsIjoibmd1eWVuZHVjMTA2MDNAZ21haWwuY29tIiwiYWRtaW4iOnRydWUsImV4cCI6MTY2OTgwNTQ4Nn0.PByr6NO_lYgDSnT-KkW0bLBgsNzfIySHO_IofdxiHsw';
+        function filterData(search) {
+            axios
+                .get("api/courses/search", {
+                    headers: {
+                        Authorization: 'Bearer ' + auth
+                    },
+                    params: {
+                        name: search.toLowerCase()
+                    }
+                })
+                .then((res) => {
+                    var results = res.data
+                    if(results.error){
+                        console.log(results.error)
+                        return
+                    }
+                    else {
+                        if(results.message){
+                            document.querySelector('#show').innerHTML = ''
+                        }
+                        else {
+                            results.forEach((product) => {
+                                document.querySelector('#show').innerHTML = `
+                                    <div class="product">
+                                        <img src="assets/uploads/courses/${product.image_course}" width="50px" height="50px" alt="">
+                                        <div class="product-detail">
+                                            <h4>${product.name_course.slice(0, 30)}</h4>
+                                            <p>$${product.price_course}</p>
+                                        </div>
+                                    </div>
+                               `
+                            })
+                        }
+                    }
+                })
+                .catch((error) => {
+                    console.error(error);
+                });
+        }
+    </script>
Index: checkout.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\"\r\n          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n    <title>Document</title>\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n    <link rel=\"stylesheet\" href=\"css/mains.css\">\r\n\r\n</head>\r\n<body>\r\n        <section class=\"breadcrumb_part\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"breadcrumb_iner\">\r\n                            <h2>CHECKOUT</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        <section class=\"mt-5\">\r\n            <form method=\"post\" id=\"forms\" >\r\n                <div class=\"d-flex flex-wrap justify-content-between align-items-start\" id=\"main_content\">\r\n                    <div class=\"col-lg-3 col-md-12 col-sm-12\">\r\n                        <h3>Thông tin người đăng ký</h3>\r\n                        <div class=\"col-md-12 form-group mb-4 mt-3\">\r\n                            <label for=\"name\" class=\"form-label\">Họ tên</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" required />\r\n                        </div>\r\n                        <div class=\"col-md-12 form-group mb-4\">\r\n                            <label for=\"email\" class=\"form-label\">Email</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" required />\r\n                        </div>\r\n                        <div class=\"col-md-12 form-group mb-4\">\r\n                            <label for=\"phone\" class=\"form-label\">Số điện thoại</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\" required />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-3 col-md-12 col-sm-12\">\r\n                        <div>\r\n                            <div class=\"mb-3\">\r\n                                <h3>Thanh toán</h3>\r\n                            </div>\r\n                            <input required type=\"radio\" name=\"pay_option\" value=\"0\" id=\"offline\">\r\n                            <label class=\"item\" for=\"offline\">\r\n                                <div class=\"title d-flex justify-content-between align-items-center\">\r\n                                    Thanh toán tại trung tâm\r\n                                    <img src=\"https://bizweb.dktcdn.net/100/329/122/files/02icon-cod.png?v=1639559673947\" alt=\"\">\r\n                                </div>\r\n                            </label>\r\n                            <input required type=\"radio\" name=\"pay_option\" value=\"1\" id=\"vnpay\">\r\n                            <label class=\"item\" for=\"vnpay\">\r\n                                <div class=\"title d-flex justify-content-between align-items-center\">\r\n                                    Thanh toán VNPAY\r\n                                    <img src=\"https://bizweb.dktcdn.net/assets/themes_support/payment_icon_vnpay.png\" alt=\"\">\r\n                                </div>\r\n                            </label>\r\n                            <input required type=\"radio\" name=\"pay_option\" value=\"2\" id=\"vietqr\">\r\n                            <label class=\"item\" for=\"vietqr\">\r\n                                <div class=\"title d-flex justify-content-between align-items-center\">\r\n                                    Chuyển khoản qua ngân hàng (VietQR)\r\n                                    <img src=\"https://bizweb.dktcdn.net/100/329/122/files/01icon-vietqr.png?v=1639481626593\" alt=\"\">\r\n                                </div>\r\n                                <div class=\"content\">\r\n                                    VietQR là nhận diện thương hiệu chung cho các dịch vụ thanh toán, chuyển khoản bằng mã QR được xử lý qua mạng lưới Napas do Ngân hàng Nhà nước Việt Nam ban hành.\r\n                                    <br>\r\n                                    <br>\r\n                                    Quý khách sẽ nhận SMS và email thông báo khi scan thanh toán thành công.\r\n                                </div>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-5 col-md-12 col-sm-12\">\r\n                        <div class=\"order_box\">\r\n                            <h2>Thông tin đơn hàng</h2>\r\n                            <table class=\"table\" id=\"example\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Ảnh</th>\r\n                                    <th>Khóa học</th>\r\n                                    <th>Lớp</th>\r\n                                    <th>Giá</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td><a class=\"text-dark\" href=\"#\">\r\n                                                <img style=\"width: 65px; height: 65px;\" class=\"rounded\" src=\"assets/uploads/admin/products/\" alt=\"\">\r\n                                            </a>\r\n                                        </td>\r\n                                        <td><a class=\"text-dark\" href=\"#\">\r\n                                                    <span class=\"d-inline-block text-truncate\" style=\"max-width: 150px;\">\r\n                                                        ReactJs\r\n                                                    </span>\r\n                                            </a></td>\r\n                                        <td class=\"quantity\">1</td>\r\n                                        <td>2,333 VND</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <ul class=\"list list_2\">\r\n                                <li>\r\n                                    <a href=\"#\" class=\"fw-bold\">Tổng tiền thanh toán\r\n                                        <span><span id=\"total_order\">300,000 VNĐ</span></span>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                            <div class=\"mt-4 text-center\">\r\n                                <button type=\"submit\" name=\"process_pay\" id=\"process_pay\" class=\"btn_1\" value=\"process_pay\">Đăng ký</button>\r\n                            </div>\r\n                            <div>\r\n                                <a href=\"#\"><i class=\"fa-solid fa-arrow-left\"></i> Quay lại</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </section>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/checkout.php b/checkout.php
--- a/checkout.php	(revision 74c2ba16defc0bb4dbc0aca29ff05a57b4a2fb93)
+++ b/checkout.php	(date 1668757692540)
@@ -120,5 +120,21 @@
                 </div>
             </form>
         </section>
+        <script type="text/javascript">
+            var pay_option = document.getElementsByName("pay_option");
+            for (var i = 0; i < pay_option.length; i++){
+                pay_option[i].addEventListener('change', function() {
+                    // (prev) ? console.log(prev.value): null;
+                    // if (this !== prev) {
+                    //     prev = this;
+                    // }
+                    console.log(this.value)
+                });
+                // if (pay_option[i].checked === true){
+                //     console.log(pay_option[i].value)
+                //     console.log(1)
+                // }
+            }
+        </script>
 </body>
 </html>
\ No newline at end of file
Index: api/component/courses.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/component/courses.php b/api/component/courses.php
new file mode 100644
--- /dev/null	(date 1668941736696)
+++ b/api/component/courses.php	(date 1668941736696)
@@ -0,0 +1,152 @@
+<?php
+    header('Content-Type: application/json');
+    header('Access-Control-Allow-Headers: Access-Control-Allow-Headers,Content-Type,Access-Control-Allow-Methods.Authorization,X-Requested-With');
+    class request_courses {
+        public function read(){
+            header("Access-Control-Allow-Origin: *");
+            header('Access-Control-Allow-Methods: GET');
+                $data = new Courses((new db())->connect());
+                $read = $data->read();
+                $num  = $read->rowCount();
+                if($num > 0){
+                    $data_array = [];
+                    while($row = $read->fetch(PDO::FETCH_ASSOC)){
+                        extract($row);
+                        $data_item = array(
+                            'id'                    => $id,
+                            'name_course'           => $name_course,
+                            'price_course'          => $price_course,
+                            'image_course'          => $image_course,
+                            'status_course'         => $status_course,
+                            'description_course'    => $description_course,
+                            'quote'                 => $quote,
+                            'discount'              => $discount,
+                            'created_at'            => $created_at,
+                            'updated_at'            => $updated_at,
+                            'id_category '          => $id_category,
+                            'id_teacher '           => $id_teacher,
+                        );
+                        array_push($data_array,$data_item);
+                    }
+                    return html_entity_decode( json_encode($data_array, JSON_UNESCAPED_UNICODE) );
+                }
+        }
+        public function create(){
+            header('Access-Control-Allow-Methods: POST');
+            $data = new Courses((new db())->connect());
+            $result = json_decode(file_get_contents("php://input"));
+            $data->name = $result->name;
+            if($data->create()){
+                return json_encode(array('message' => 'Created successfully'));
+            }
+            else {
+                return json_encode(array('message' => "Don't create !"));
+            }
+        }
+        public function update(){
+            header('Access-Control-Allow-Methods: PUT');
+            $data = new Courses((new db())->connect());
+            $result = json_decode(file_get_contents("php://input"));
+            $data->id 	= $result->id;
+            $data->name = $result->name;
+            if($data->update()){
+                return json_encode(array('message' => 'Update successfully'));
+            }
+            else {
+                return json_encode(array('message' => "Don't Update !"));
+            }
+        }
+        public function delete(){
+            header('Access-Control-Allow-Methods: DELETE');
+            $data = new Courses((new db())->connect());
+            $result = json_decode(file_get_contents("php://input"));
+            $data->id = $result->id;
+            if($data->delete()){
+                return json_encode(array('message' => 'Delete successfully'));
+            }
+            else {
+                return json_encode(array('message' => "Don't delete !"));
+            }
+        }
+        public function detail(){
+            header('Access-Control-Allow-Methods: GET');
+            $result     = json_decode(file_get_contents("php://input"));
+            $data       = new Categories((new db())->connect());
+            $data->id   = $result->id;
+            $check      = $data->check_id();
+            if(isset($check)){
+                return json_encode(array('message' => $check));
+            }
+            else {
+                $data->show();
+                $data_item = array(
+                    'id'    => $data->id,
+                    'name'  => $data->name_category
+                );
+                return html_entity_decode( json_encode($data_item, JSON_UNESCAPED_UNICODE) );
+            }
+        }
+        public function search(){
+            header('Access-Control-Allow-Methods: GET');
+            $data = new Courses((new db())->connect());
+            if(isset($_GET['name'])){
+                if(!empty($_GET['name'])){
+                    $read = $data->search($_GET['name']);
+                    $num  = $read->rowCount();
+                    if($num > 0){
+                        $data_array = [];
+                        while($row = $read->fetch(PDO::FETCH_ASSOC)){
+                            extract($row);
+                            $data_item = array(
+                                'id'                    => $id,
+                                'name_course'           => $name_course,
+                                'price_course'          => $price_course,
+                                'image_course'          => $image_course,
+                                'status_course'         => $status_course,
+                                'description_course'    => $description_course,
+                                'quote'                 => $quote,
+                                'discount'              => $discount,
+                                'created_at'            => $created_at,
+                                'updated_at'            => $updated_at,
+                                'id_category '          => $id_category,
+                                'id_teacher '           => $id_teacher,
+                            );
+                            array_push($data_array,$data_item);
+                        }
+                        return html_entity_decode( json_encode($data_array, JSON_UNESCAPED_UNICODE) );
+                    }
+                    else {
+                        return json_encode(array('message' => 'No data !'));
+                    }
+                }
+                else {
+                    return json_encode(array('message' => 'No data !'));
+                }
+            }
+        }
+    }
+    if(isset($_GET['act'])){
+        $act = $_GET['act'];
+        if($act == 'post'){
+            echo (new request_courses)->create();
+        }
+        else if($act == 'update'){
+            echo (new request_courses)->update();
+        }
+        else if($act == 'delete'){
+            echo (new request_courses)->delete();
+        }
+        else if($act == 'detail'){
+            echo (new request_courses)->detail();
+        }
+        else if($act == 'search'){
+            echo (new request_courses)->search();
+        }
+        else {
+            echo json_encode(array('message' => "Don't handle API !"));
+        }
+    }
+    else {
+        print_r((new request_courses)->read());
+    }
+?>
Index: auth/auth_api.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/auth/auth_api.php b/auth/auth_api.php
new file mode 100644
--- /dev/null	(date 1668941405253)
+++ b/auth/auth_api.php	(date 1668941405253)
@@ -0,0 +1,69 @@
+<?php
+
+    function generate_jwt($payload, $secret = 'secret') {
+        $headers            = array('alg'=>'HS256','typ'=>'JWT');
+        $headers_encoded    = base64url_encode(json_encode($headers));
+        $payload_encoded    = base64url_encode(json_encode($payload));
+        $signature          = hash_hmac('SHA256', "$headers_encoded.$payload_encoded", $secret, true);
+        $signature_encoded  = base64url_encode($signature);
+        $jwt                = "$headers_encoded.$payload_encoded.$signature_encoded";
+        return $jwt;
+    }
+
+    function is_jwt_valid($jwt, $secret = 'secret') {
+        // split the jwt
+        $tokenParts = explode('.', $jwt);
+        $header     = base64_decode($tokenParts[0]);
+        $payload    = base64_decode($tokenParts[1]);
+        $signature_provided = $tokenParts[2];
+        // check the expiration time - note this will cause an error if there is no 'exp' claim in the jwt
+        $expiration       = json_decode($payload)->exp;
+        $is_token_expired = ($expiration - time()) < 0;
+        // build a signature based on the header and payload using the secret
+        $base64_url_header      = base64url_encode($header);
+        $base64_url_payload     = base64url_encode($payload);
+        $signature              = hash_hmac('SHA256', $base64_url_header . "." . $base64_url_payload, $secret, true);
+        $base64_url_signature   = base64url_encode($signature);
+        // verify it matches the signature provided in the jwt
+        $is_signature_valid = ($base64_url_signature === $signature_provided);
+        if ($is_token_expired || !$is_signature_valid) {
+            return FALSE;
+        } else {
+            return TRUE;
+        }
+    }
+
+    function base64url_encode($data) {
+        return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');
+    }
+
+    function get_authorization_header(){
+        $headers = null;
+        if (isset($_SERVER['Authorization'])) {
+            $headers = trim($_SERVER["Authorization"]);
+        } else if (isset($_SERVER['HTTP_AUTHORIZATION'])) { //Nginx or fast CGI
+            $headers = trim($_SERVER["HTTP_AUTHORIZATION"]);
+        } else if (function_exists('apache_request_headers')) {
+            $requestHeaders = apache_request_headers();
+            // Server-side fix for bug in old Android versions (a nice side-effect of this fix means we don't care about capitalization for Authorization)
+            $requestHeaders = array_combine(array_map('ucwords', array_keys($requestHeaders)), array_values($requestHeaders));
+            //print_r($requestHeaders);
+            if (isset($requestHeaders['Authorization'])) {
+                $headers = trim($requestHeaders['Authorization']);
+            }
+        }
+        return $headers;
+    }
+
+    function get_bearer_token() {
+        $headers = get_authorization_header();
+        // HEADER: Get the access token from the header
+        if (!empty($headers)) {
+            if (preg_match('/Bearer\s(\S+)/', $headers, $matches)) {
+                return $matches[1];
+            }
+        }
+        return null;
+    }
+
+?>
\ No newline at end of file
Index: .htaccess
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Order Deny,Allow\r\n#Deny from all\r\n#Allow from 171.224.177.225\r\nErrorDocument 404 http://localhost/courses/page_not_found\r\n#DirectoryIndex admin.php\r\nRewriteEngine On\r\nRewriteCond %{REQUEST_FILENAME} !-d\r\nRewriteCond %{REQUEST_FILENAME} !-f\r\nRewriteRule ^page_not_found$ views/404.php\r\n#RewriteRule ^sign_in$                                                   views/account/sign_in.php\r\n#RewriteRule ^sign_up$                                                   views/account/sign_up.php\r\n#RewriteRule ^forgot_pass$                                               views/account/forgot_pass.php\r\n#RewriteRule ^reset_pass$                                                views/account/reset_pass.php\r\nRewriteRule ^pay$                                                       pay.php [QSA,L]\r\nRewriteRule ^pay/status$                                                pay.php?req_pay=status [QSA,L]\r\nRewriteRule ^account/([a-zA-Z0-9_-]+)$                                  account.php?act_acc=$1 [QSA,L]\r\nRewriteRule ^login$                                                     login.php\r\nRewriteRule ^admin$                                                     admin.php\r\nRewriteRule ^admin/([a-zA-Z0-9_-]+)$                                    admin.php?module=$1 [QSA,L]\r\nRewriteRule ^admin/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$                   admin.php?module=$1&act=$2 [QSA,L]\r\nRewriteRule ^admin/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$  admin.php?module=$1&act=$2&id=$3 [QSA,L]\r\nRewriteRule ^home$                                                      index.php\r\nRewriteRule ^([a-zA-Z0-9_-]+)$                                          index.php?v=$1 [QSA,L]\r\nRewriteRule ^([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$                         index.php?v=$1&id=$2 [QSA,L]\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.htaccess b/.htaccess
--- a/.htaccess	(revision 74c2ba16defc0bb4dbc0aca29ff05a57b4a2fb93)
+++ b/.htaccess	(date 1668912392236)
@@ -11,6 +11,13 @@
 #RewriteRule ^sign_up$                                                   views/account/sign_up.php
 #RewriteRule ^forgot_pass$                                               views/account/forgot_pass.php
 #RewriteRule ^reset_pass$                                                views/account/reset_pass.php
+
+
+RewriteRule ^api$                                                       api.php
+RewriteRule ^api/([a-zA-Z0-9_-]+)$                                      api.php?module=$1               [QSA,L]
+RewriteRule ^api/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$                     api.php?module=$1&act=$2        [QSA,L]
+RewriteRule ^api/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$    api.php?module=$1&act=$2&id=$3  [QSA,L]
+
 RewriteRule ^pay$                                                       pay.php [QSA,L]
 RewriteRule ^pay/status$                                                pay.php?req_pay=status [QSA,L]
 RewriteRule ^account/([a-zA-Z0-9_-]+)$                                  account.php?act_acc=$1 [QSA,L]
Index: api/module/categories.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/module/categories.php b/api/module/categories.php
new file mode 100644
--- /dev/null	(date 1668913689440)
+++ b/api/module/categories.php	(date 1668913689440)
@@ -0,0 +1,72 @@
+<?php
+    class Categories {
+        public function __construct($db){
+            $this->conn = $db;
+        }
+        public function read(){
+            $sql = "SELECT * FROM categories";
+            $stmt = $this->conn->prepare($sql);
+            $stmt->execute();
+            return $stmt;
+        }
+        public function show(){
+            $sql = "SELECT * FROM categories WHERE id = ? LIMIT 1";
+            $stmt = $this->conn->prepare($sql);
+            $stmt->bindParam(1,$this->id);
+            $stmt->execute();
+            $row = $stmt->fetch(PDO::FETCH_ASSOC);
+            $this->name_category = $row['name_category'];
+        }
+        public function create(){
+            $query = "INSERT INTO categories SET name_category=:name";
+            $stmt = $this->conn->prepare($query);
+            // clean data
+            $this->name = htmlspecialchars(strip_tags($this->name));
+            // bind data
+            $stmt->bindParam(':name', $this->name);
+            if($stmt->execute()) {
+                return true;
+            }
+            printf("Error %s.\n", $stmt->error);
+            return false;
+        }
+        public function update(){
+            $query = "UPDATE categories SET name_category=:name WHERE id=:id";
+            $stmt = $this->conn->prepare($query);
+            // clean data
+            $this->id = htmlspecialchars(strip_tags($this->id));
+            $this->name = htmlspecialchars(strip_tags($this->name));
+            // bind data
+            $stmt->bindParam(':id', $this->id);
+            $stmt->bindParam(':name', $this->name);
+            if($stmt->execute()) {
+                return true;
+            }
+            printf("Error %s.\n", $stmt->error);
+            return false;
+        }
+        public function delete(){
+            $query = "DELETE FROM categories WHERE id=:id";
+            $stmt = $this->conn->prepare($query);
+            // clean data
+            $this->id = htmlspecialchars(strip_tags($this->id));
+            // bind data
+            $stmt->bindParam(':id', $this->id);
+            if($stmt->execute()) {
+                return true;
+            }
+            printf("Error %s.\n", $stmt->error);
+            return false;
+        }
+        public function check_id(){
+            $sql = "SELECT * FROM categories WHERE id = ? LIMIT 1";
+            $stmt = $this->conn->prepare($sql);
+            $stmt->bindParam(1,$this->id);
+            $stmt->execute();
+            $row = $stmt->fetch(PDO::FETCH_ASSOC);
+            if(!isset($row['id'])) {
+                return "Danh mục không tồn tại !";
+            }
+        }
+    }
+?>
\ No newline at end of file
