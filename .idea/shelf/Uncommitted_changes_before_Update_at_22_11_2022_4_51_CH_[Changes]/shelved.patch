Index: views/site/lessons/lessons.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><main>\r\n    <!--? slider Area Start-->\r\n    <section class=\"slider-area slider-area2\">\r\n        <div class=\"slider-active\">\r\n            <!-- Single Slider -->\r\n            <div class=\"single-slider slider-height2\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-8 col-lg-11 col-md-12\">\r\n                            <div class=\"hero__caption hero__caption2\">\r\n                                <h1 data-animation=\"bounceIn\" data-delay=\"0.2s\">Our courses</h1>\r\n                                <!-- breadcrumb Start-->\r\n                                <nav aria-label=\"breadcrumb\">\r\n                                    <ol class=\"breadcrumb\">\r\n                                        <li class=\"breadcrumb-item\"><a href=\"index.html\">Home</a></li>\r\n                                        <li class=\"breadcrumb-item\"><a href=\"#\">Services</a></li> \r\n                                    </ol>\r\n                                </nav>\r\n                                <!-- breadcrumb End -->\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>          \r\n            </div>\r\n        </div>\r\n    </section>\r\n    <div class=\"courses-area section-padding40 fix\">\r\n        <div class=\"container\">\r\n            <div class=\"row justify-content-center\">\r\n                <div class=\"col-xl-7 col-lg-8\">\r\n                    <div class=\"section-tittle text-center mb-55\">\r\n                        <h2>Our featured courses</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class='mb-5 d-flex justify-content-between align-items-center'>\r\n                <button class=\"p-3 px-4 ml-4  bg-primary border-0 rounded-circle\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasExample\" aria-controls=\"offcanvasExample\">\r\n                    <i class=\"fa-solid fa-filter\"></i>\r\n                </button>\r\n                <form class=\"gap-2\" method=\"post\" action='<?= LESSONS?>'>\r\n                    <div class=\"d-flex\">\r\n                        <input id=\"filter\" name='input_search' class=\"px-3 rounded border-light py-2 me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n                        <div>\r\n                            <button name='search_btn' class=\"p-3 rounded  border-0 bg-primary\" type=\"submit\">Search</button>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"show_course\" class=\"position-absolute w-25\">\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class=\"offcanvas offcanvas-start bg-secondary bg-gradient\" tabindex=\"-1\" id=\"offcanvasExample\" aria-labelledby=\"offcanvasExampleLabel\">\r\n                <div class=\"offcanvas-header p-4\">\r\n                    <h5 class=\"offcanvas-title\" id=\"offcanvasExampleLabel\">\r\n                        <a href=\"home\"><img src=\"assets/img/img_site/img/logo/logo.png\" alt=\"\"></a>\r\n                    </h5>\r\n                    <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\r\n                </div>\r\n                <li class=\"mb-5\">\r\n                    <hr class='dropdown-divider'/>\r\n                </li> \r\n                <div class=\"offcanvas-body\">\r\n                    <ul class='gap-5 row ml-3'>\r\n                        <li><a href=\"<?= LESSONS?>?cate=all\">Tất cả</a></li>\r\n                        <?php foreach($categories as $value):?>\r\n                        <li><a href=\"<?= LESSONS?>?cate=<?php echo $value['id']?>\"><?php echo $value['name_category']?></a></li>\r\n\r\n                        <?php endforeach?>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n               <?php foreach ($lessions as $value):?>\r\n                <div class=\"col-lg-4\">\r\n                    <div class=\"properties properties2 mb-30\">\r\n                        <div class=\"properties__card\">\r\n                            <div class=\"properties__img overlay1\">\r\n                                <a href=\"<?= LESSONS?>/<?php echo $value['id']?>\"><img src=\"assets/img/img_site/img/gallery/featured6.png\" alt=\"\"></a>\r\n                            </div>\r\n                            <div class=\"properties__caption\">\r\n                                <p>User Experience</p>\r\n                                <h3><a href=\"<?= LESSONS?>/<?php echo $value['id']?>\"><?php echo $value['name_course']?></a></h3>\r\n                                <p>\r\n                                    <?php echo $value['description_course'] ?>\r\n                                </p>\r\n                                <div class=\"properties__footer d-flex justify-content-between align-items-center\">\r\n                                    <div class=\"restaurant-name\">\r\n                                        <div class=\"rating\">\r\n                                            <i class=\"fas fa-star\"></i>\r\n                                            <i class=\"fas fa-star\"></i>\r\n                                            <i class=\"fas fa-star\"></i>\r\n                                            <i class=\"fas fa-star\"></i>\r\n                                            <i class=\"fas fa-star-half\"></i>\r\n                                        </div>\r\n                                        <p><span>(4.5)</span></p> \r\n                                        \r\n                                    </div>\r\n                                    <div class=\"price\">\r\n\r\n                                            <span class=\"<?php echo $value['discount'] != 0 ? 'text-decoration-line-through textPrice colorOldPrice' : '' ?>\"><?php echo number_format($value['price_course'])?> $</span>\r\n\r\n                                            <span><?php echo $value['discount'] != 0 ? total($value['price_course'],$value['discount']) : '' ?></span>\r\n                                        </div>\r\n                                </div>\r\n                                <a href=\"<?= LESSONS?>/<?php echo $value['id']?>\" class=\"border-btn border-btn2\">Find out more</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               <?php endforeach?>\r\n            </div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <?php pagination($data_cate[1],$data_cate[2],LESSONS)?>\r\n            </nav>\r\n        </div>\r\n    </div>\r\n</main>\r\n\r\n<script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\r\n<script>\r\n    document.querySelector('#filter').addEventListener('input', (e) => filterData(e.target.value))\r\n    var auth = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTmd1eWVuIER1YyIsInBob25lIjoiMDgyMzU2NTgzMSIsImVtYWlsIjoibmd1eWVuZHVjMTA2MDNAZ21haWwuY29tIiwiYWRtaW4iOnRydWUsImV4cCI6MTY2OTgwNTQ4Nn0.PByr6NO_lYgDSnT-KkW0bLBgsNzfIySHO_IofdxiHsw';\r\n    function filterData(search) {\r\n        axios\r\n            .get(\"api/courses/search\", {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + auth\r\n                },\r\n                params: {\r\n                    name: search.toLowerCase()\r\n                }\r\n            })\r\n            .then((res) => {\r\n                var results = res.data\r\n                if(results.error){\r\n                    console.log(results.error)\r\n                }\r\n                else {\r\n                    if(results.message){\r\n                        document.querySelector('#show_course').innerHTML = 'Không có dữ liệu !'\r\n                    }\r\n                    else {\r\n                        results.forEach((product) => {\r\n                            document.querySelector('#show_course').innerHTML = `\r\n                                <div class=\"product d-flex justify-content-start align-items-center m-2\">\r\n                                    <img id=\"image_course\" src=\"assets/uploads/courses/${product.image_course}\" width=\"50px\" height=\"50px\" alt=\"Image Course\" style=\"border-radius: 5px\">\r\n                                    <div class=\"product-detail d-flex flex-column\" style=\"margin-left: 10px\">\r\n                                        <span id=\"name_course\">${product.name_course.slice(0, 30)}</span>\r\n                                        <span id=\"price_course\">$${product.price_course}</span>\r\n                                    </div>\r\n                                </div>\r\n                            `\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n</script>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views/site/lessons/lessons.php b/views/site/lessons/lessons.php
--- a/views/site/lessons/lessons.php	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ b/views/site/lessons/lessons.php	(date 1669109435925)
@@ -142,7 +142,7 @@
                     }
                     else {
                         results.forEach((product) => {
-                            document.querySelector('#show_course').innerHTML = `
+                            document.querySelector('#show_course').innerHTML += `
                                 <div class="product d-flex justify-content-start align-items-center m-2">
                                     <img id="image_course" src="assets/uploads/courses/${product.image_course}" width="50px" height="50px" alt="Image Course" style="border-radius: 5px">
                                     <div class="product-detail d-flex flex-column" style="margin-left: 10px">
Index: routes/route_api.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n    // tạo jwt\r\n    $payload = array (\r\n        'name'  => 'Nguyen Duc',\r\n        'phone' => '0823565831',\r\n        'email' => 'nguyenduc10603@gmail.com',\r\n        'admin' => true,\r\n        'exp'   => time() + (86400 * 10)\r\n    );\r\n    $jwt = generate_jwt($payload);\r\n    $bearer_token = get_bearer_token();\r\n    if(empty($bearer_token)){\r\n        echo json_encode(array(\r\n            'error' => 'Access denied !',\r\n        ));\r\n    }else {\r\n        $is_jwt_valid = is_jwt_valid($bearer_token);\r\n        if($is_jwt_valid == true) {\r\n            $auth = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTmd1eWVuIER1YyIsInBob25lIjoiMDgyMzU2NTgzMSIsImVtYWlsIjoibmd1eWVuZHVjMTA2MDNAZ21haWwuY29tIiwiYWRtaW4iOnRydWUsImV4cCI6MTY2OTgwNTQ4Nn0.PByr6NO_lYgDSnT-KkW0bLBgsNzfIySHO_IofdxiHsw';\r\n            if($bearer_token == $auth) {\r\n                if (isset($_GET['module'])) {\r\n                    $module = $_GET['module'];\r\n                    switch ($module){\r\n                        case 'categories':\r\n                            include_once 'api/module/'.$module.'.php';\r\n                            include_once 'api/component/'.$module.'.php';\r\n                            break;\r\n                        case 'courses':\r\n                            include_once 'api/module/'.$module.'.php';\r\n                            include_once 'api/component/'.$module.'.php';\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                echo json_encode(array(\r\n                    'error' => 'Access denied !'\r\n                ));\r\n            }\r\n        } else {\r\n            echo json_encode(array(\r\n                'error' => 'Access denied !'\r\n            ));\r\n        }\r\n    }\r\n?>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/routes/route_api.php b/routes/route_api.php
--- a/routes/route_api.php	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ b/routes/route_api.php	(date 1669109475630)
@@ -1,45 +1,44 @@
 <?php
-    // tạo jwt
-    $payload = array (
-        'name'  => 'Nguyen Duc',
-        'phone' => '0823565831',
-        'email' => 'nguyenduc10603@gmail.com',
-        'admin' => true,
-        'exp'   => time() + (86400 * 10)
-    );
-    $jwt = generate_jwt($payload);
-    $bearer_token = get_bearer_token();
-    if(empty($bearer_token)){
-        echo json_encode(array(
-            'error' => 'Access denied !',
-        ));
-    }else {
-        $is_jwt_valid = is_jwt_valid($bearer_token);
-        if($is_jwt_valid == true) {
-            $auth = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTmd1eWVuIER1YyIsInBob25lIjoiMDgyMzU2NTgzMSIsImVtYWlsIjoibmd1eWVuZHVjMTA2MDNAZ21haWwuY29tIiwiYWRtaW4iOnRydWUsImV4cCI6MTY2OTgwNTQ4Nn0.PByr6NO_lYgDSnT-KkW0bLBgsNzfIySHO_IofdxiHsw';
-            if($bearer_token == $auth) {
-                if (isset($_GET['module'])) {
-                    $module = $_GET['module'];
-                    switch ($module){
-                        case 'categories':
-                            include_once 'api/module/'.$module.'.php';
-                            include_once 'api/component/'.$module.'.php';
-                            break;
-                        case 'courses':
-                            include_once 'api/module/'.$module.'.php';
-                            include_once 'api/component/'.$module.'.php';
-                            break;
-                    }
-                }
-            } else {
-                echo json_encode(array(
-                    'error' => 'Access denied !'
-                ));
-            }
-        } else {
-            echo json_encode(array(
-                'error' => 'Access denied !'
-            ));
+    function route_method($module){
+        $method = $_SERVER['REQUEST_METHOD'];
+        switch ($method) {
+            case 'PUT':
+                echo (new $module())->update();
+                break;
+            case 'POST':
+                echo (new $module())->create();
+                break;
+            case 'GET':
+                if(isset($_GET['id'])){
+                    echo (new $module())->detail();
+                }
+                elseif (isset($_GET['q'])){
+                    print_r((new $module())->search());
+                }
+                else {
+                    echo (new $module())->read();
+                }
+                break;
+            case 'DELETE':
+                echo (new $module())->delete();
+                break;
+            default:
+                echo json_encode(array('message' => 'error'));
+                break;
+        }
+    }
+    if (isset($_GET['module'])) {
+        $module = $_GET['module'];
+        $dir    = $dir_api.$module.'.php';
+        switch ($module){
+            case 'categories':
+                require_once $dir;
+                route_method($module);
+                break;
+            case 'courses':
+                require_once $dir;
+                route_method($module);
+                break;
         }
     }
 ?>
\ No newline at end of file
Index: api/module/courses.php
===================================================================
diff --git a/api/module/courses.php b/api/module/courses.php
deleted file mode 100644
--- a/api/module/courses.php	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ /dev/null	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
@@ -1,68 +0,0 @@
-<?php
-class Courses {
-    public function __construct($db){
-        $this->conn = $db;
-    }
-    public function read(){
-        $sql = "SELECT * FROM courses";
-        $stmt = $this->conn->prepare($sql);
-        $stmt->execute();
-        return $stmt;
-    }
-    public function show(){
-        $sql = "SELECT * FROM categories WHERE id = ? LIMIT 1";
-        $stmt = $this->conn->prepare($sql);
-        $stmt->bindParam(1,$this->id);
-        $stmt->execute();
-        $row = $stmt->fetch(PDO::FETCH_ASSOC);
-        $this->name_category = $row['name_category'];
-    }
-    public function create(){
-        $query = "INSERT INTO categories SET name_category=:name";
-        $stmt = $this->conn->prepare($query);
-        // clean data
-        $this->name = htmlspecialchars(strip_tags($this->name));
-        // bind data
-        $stmt->bindParam(':name', $this->name);
-        if($stmt->execute()) {
-            return true;
-        }
-        printf("Error %s.\n", $stmt->error);
-        return false;
-    }
-    public function update(){
-        $query = "UPDATE categories SET name_category=:name WHERE id=:id";
-        $stmt = $this->conn->prepare($query);
-        // clean data
-        $this->id = htmlspecialchars(strip_tags($this->id));
-        $this->name = htmlspecialchars(strip_tags($this->name));
-        // bind data
-        $stmt->bindParam(':id', $this->id);
-        $stmt->bindParam(':name', $this->name);
-        if($stmt->execute()) {
-            return true;
-        }
-        printf("Error %s.\n", $stmt->error);
-        return false;
-    }
-    public function delete(){
-        $query = "DELETE FROM categories WHERE id=:id";
-        $stmt = $this->conn->prepare($query);
-        // clean data
-        $this->id = htmlspecialchars(strip_tags($this->id));
-        // bind data
-        $stmt->bindParam(':id', $this->id);
-        if($stmt->execute()) {
-            return true;
-        }
-        printf("Error %s.\n", $stmt->error);
-        return false;
-    }
-    public function search($key){
-        $sql = "SELECT * FROM courses  WHERE name_course LIKE '%$key%'";
-        $stmt = $this->conn->prepare($sql);
-        $stmt->execute();
-        return $stmt;
-    }
-}
-?>
\ No newline at end of file
Index: api/module/categories.php
===================================================================
diff --git a/api/module/categories.php b/api/module/categories.php
deleted file mode 100644
--- a/api/module/categories.php	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ /dev/null	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
@@ -1,72 +0,0 @@
-<?php
-    class Categories {
-        public function __construct($db){
-            $this->conn = $db;
-        }
-        public function read(){
-            $sql = "SELECT * FROM categories";
-            $stmt = $this->conn->prepare($sql);
-            $stmt->execute();
-            return $stmt;
-        }
-        public function show(){
-            $sql = "SELECT * FROM categories WHERE id = ? LIMIT 1";
-            $stmt = $this->conn->prepare($sql);
-            $stmt->bindParam(1,$this->id);
-            $stmt->execute();
-            $row = $stmt->fetch(PDO::FETCH_ASSOC);
-            $this->name_category = $row['name_category'];
-        }
-        public function create(){
-            $query = "INSERT INTO categories SET name_category=:name";
-            $stmt = $this->conn->prepare($query);
-            // clean data
-            $this->name = htmlspecialchars(strip_tags($this->name));
-            // bind data
-            $stmt->bindParam(':name', $this->name);
-            if($stmt->execute()) {
-                return true;
-            }
-            printf("Error %s.\n", $stmt->error);
-            return false;
-        }
-        public function update(){
-            $query = "UPDATE categories SET name_category=:name WHERE id=:id";
-            $stmt = $this->conn->prepare($query);
-            // clean data
-            $this->id = htmlspecialchars(strip_tags($this->id));
-            $this->name = htmlspecialchars(strip_tags($this->name));
-            // bind data
-            $stmt->bindParam(':id', $this->id);
-            $stmt->bindParam(':name', $this->name);
-            if($stmt->execute()) {
-                return true;
-            }
-            printf("Error %s.\n", $stmt->error);
-            return false;
-        }
-        public function delete(){
-            $query = "DELETE FROM categories WHERE id=:id";
-            $stmt = $this->conn->prepare($query);
-            // clean data
-            $this->id = htmlspecialchars(strip_tags($this->id));
-            // bind data
-            $stmt->bindParam(':id', $this->id);
-            if($stmt->execute()) {
-                return true;
-            }
-            printf("Error %s.\n", $stmt->error);
-            return false;
-        }
-        public function check_id(){
-            $sql = "SELECT * FROM categories WHERE id = ? LIMIT 1";
-            $stmt = $this->conn->prepare($sql);
-            $stmt->bindParam(1,$this->id);
-            $stmt->execute();
-            $row = $stmt->fetch(PDO::FETCH_ASSOC);
-            if(!isset($row['id'])) {
-                return "Danh mục không tồn tại !";
-            }
-        }
-    }
-?>
\ No newline at end of file
Index: api/component/categories.php
===================================================================
diff --git a/api/component/categories.php b/api/component/categories.php
deleted file mode 100644
--- a/api/component/categories.php	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ /dev/null	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
@@ -1,100 +0,0 @@
-<?php
-header('Content-Type: application/json');
-header('Access-Control-Allow-Headers: Access-Control-Allow-Headers,Content-Type,Access-Control-Allow-Methods.Authorization,X-Requested-With');
-class request_categories {
-    public function read(){
-        header('Access-Control-Allow-Methods: GET');
-        $data = new Categories((new db())->connect());
-        $read = $data->read();
-        $num  = $read->rowCount();
-        if($num > 0){
-            $data_array = [];
-            while($row = $read->fetch(PDO::FETCH_ASSOC)){
-                extract($row);
-                $data_item = array(
-                    'id'    => $id,
-                    'name'  => $name_category
-                );
-                array_push($data_array,$data_item);
-            }
-            return html_entity_decode( json_encode($data_array, JSON_UNESCAPED_UNICODE) );
-        }
-    }
-    public function create(){
-        header('Access-Control-Allow-Methods: POST');
-        $data = new Categories((new db())->connect());
-        $result = json_decode(file_get_contents("php://input"));
-        $data->name = $result->name;
-        if($data->create()){
-            return json_encode(array('message' => 'Created successfully'));
-        }
-        else {
-            return json_encode(array('message' => "Don't create !"));
-        }
-    }
-    public function update(){
-        header('Access-Control-Allow-Methods: PUT');
-        $data = new Categories((new db())->connect());
-        $result = json_decode(file_get_contents("php://input"));
-        $data->id 	= $result->id;
-        $data->name = $result->name;
-        if($data->update()){
-            return json_encode(array('message' => 'Update successfully'));
-        }
-        else {
-            return json_encode(array('message' => "Don't Update !"));
-        }
-    }
-    public function delete(){
-        header('Access-Control-Allow-Methods: DELETE');
-        $data = new Categories((new db())->connect());
-        $result = json_decode(file_get_contents("php://input"));
-        $data->id = $result->id;
-        if($data->delete()){
-            return json_encode(array('message' => 'Delete successfully'));
-        }
-        else {
-            return json_encode(array('message' => "Don't delete !"));
-        }
-    }
-    public function detail(){
-        header('Access-Control-Allow-Methods: GET');
-        $result     = json_decode(file_get_contents("php://input"));
-        $data       = new Categories((new db())->connect());
-        $data->id   = $result->id;
-        $check      = $data->check_id();
-        if(isset($check)){
-            return json_encode(array('message' => $check));
-        }
-        else {
-            $data->show();
-            $data_item = array(
-                'id'    => $data->id,
-                'name'  => $data->name_category
-            );
-            return html_entity_decode( json_encode($data_item, JSON_UNESCAPED_UNICODE) );
-        }
-    }
-}
-    if(isset($_GET['act'])){
-        $act = $_GET['act'];
-        if($act == 'post'){
-            echo (new request_categories)->create();
-        }
-        else if($act == 'update'){
-            echo (new request_categories)->update();
-        }
-        else if($act == 'delete'){
-            echo (new request_categories)->delete();
-        }
-        else if($act == 'detail'){
-            echo (new request_categories)->detail();
-        }
-        else {
-            echo json_encode(array('message' => "Don't handle API !"));
-        }
-    }
-    else {
-        print_r((new request_categories)->read());
-    }
-?>
Index: api/component/courses.php
===================================================================
diff --git a/api/component/courses.php b/api/component/courses.php
deleted file mode 100644
--- a/api/component/courses.php	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ /dev/null	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
@@ -1,152 +0,0 @@
-<?php
-    header('Content-Type: application/json');
-    header('Access-Control-Allow-Headers: Access-Control-Allow-Headers,Content-Type,Access-Control-Allow-Methods.Authorization,X-Requested-With');
-    class request_courses {
-        public function read(){
-            header("Access-Control-Allow-Origin: *");
-            header('Access-Control-Allow-Methods: GET');
-                $data = new Courses((new db())->connect());
-                $read = $data->read();
-                $num  = $read->rowCount();
-                if($num > 0){
-                    $data_array = [];
-                    while($row = $read->fetch(PDO::FETCH_ASSOC)){
-                        extract($row);
-                        $data_item = array(
-                            'id'                    => $id,
-                            'name_course'           => $name_course,
-                            'price_course'          => $price_course,
-                            'image_course'          => $image_course,
-                            'status_course'         => $status_course,
-                            'description_course'    => $description_course,
-                            'quote'                 => $quote,
-                            'discount'              => $discount,
-                            'created_at'            => $created_at,
-                            'updated_at'            => $updated_at,
-                            'id_category '          => $id_category,
-                            'id_teacher '           => $id_teacher,
-                        );
-                        array_push($data_array,$data_item);
-                    }
-                    return html_entity_decode( json_encode($data_array, JSON_UNESCAPED_UNICODE) );
-                }
-        }
-        public function create(){
-            header('Access-Control-Allow-Methods: POST');
-            $data = new Courses((new db())->connect());
-            $result = json_decode(file_get_contents("php://input"));
-            $data->name = $result->name;
-            if($data->create()){
-                return json_encode(array('message' => 'Created successfully'));
-            }
-            else {
-                return json_encode(array('message' => "Don't create !"));
-            }
-        }
-        public function update(){
-            header('Access-Control-Allow-Methods: PUT');
-            $data = new Courses((new db())->connect());
-            $result = json_decode(file_get_contents("php://input"));
-            $data->id 	= $result->id;
-            $data->name = $result->name;
-            if($data->update()){
-                return json_encode(array('message' => 'Update successfully'));
-            }
-            else {
-                return json_encode(array('message' => "Don't Update !"));
-            }
-        }
-        public function delete(){
-            header('Access-Control-Allow-Methods: DELETE');
-            $data = new Courses((new db())->connect());
-            $result = json_decode(file_get_contents("php://input"));
-            $data->id = $result->id;
-            if($data->delete()){
-                return json_encode(array('message' => 'Delete successfully'));
-            }
-            else {
-                return json_encode(array('message' => "Don't delete !"));
-            }
-        }
-        public function detail(){
-            header('Access-Control-Allow-Methods: GET');
-            $result     = json_decode(file_get_contents("php://input"));
-            $data       = new Categories((new db())->connect());
-            $data->id   = $result->id;
-            $check      = $data->check_id();
-            if(isset($check)){
-                return json_encode(array('message' => $check));
-            }
-            else {
-                $data->show();
-                $data_item = array(
-                    'id'    => $data->id,
-                    'name'  => $data->name_category
-                );
-                return html_entity_decode( json_encode($data_item, JSON_UNESCAPED_UNICODE) );
-            }
-        }
-        public function search(){
-            header('Access-Control-Allow-Methods: GET');
-            $data = new Courses((new db())->connect());
-            if(isset($_GET['name'])){
-                if(!empty($_GET['name'])){
-                    $read = $data->search($_GET['name']);
-                    $num  = $read->rowCount();
-                    if($num > 0){
-                        $data_array = [];
-                        while($row = $read->fetch(PDO::FETCH_ASSOC)){
-                            extract($row);
-                            $data_item = array(
-                                'id'                    => $id,
-                                'name_course'           => $name_course,
-                                'price_course'          => $price_course,
-                                'image_course'          => $image_course,
-                                'status_course'         => $status_course,
-                                'description_course'    => $description_course,
-                                'quote'                 => $quote,
-                                'discount'              => $discount,
-                                'created_at'            => $created_at,
-                                'updated_at'            => $updated_at,
-                                'id_category '          => $id_category,
-                                'id_teacher '           => $id_teacher,
-                            );
-                            array_push($data_array,$data_item);
-                        }
-                        return html_entity_decode( json_encode($data_array, JSON_UNESCAPED_UNICODE) );
-                    }
-                    else {
-                        return json_encode(array('message' => 'No data !'));
-                    }
-                }
-                else {
-                    return json_encode(array('message' => 'No data !'));
-                }
-            }
-        }
-    }
-    if(isset($_GET['act'])){
-        $act = $_GET['act'];
-        if($act == 'post'){
-            echo (new request_courses)->create();
-        }
-        else if($act == 'update'){
-            echo (new request_courses)->update();
-        }
-        else if($act == 'delete'){
-            echo (new request_courses)->delete();
-        }
-        else if($act == 'detail'){
-            echo (new request_courses)->detail();
-        }
-        else if($act == 'search'){
-            echo (new request_courses)->search();
-        }
-        else {
-            echo json_encode(array('message' => "Don't handle API !"));
-        }
-    }
-    else {
-        print_r((new request_courses)->read());
-    }
-?>
Index: api_dir/categories.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api_dir/categories.php b/api_dir/categories.php
new file mode 100644
--- /dev/null	(date 1669109261707)
+++ b/api_dir/categories.php	(date 1669109261707)
@@ -0,0 +1,167 @@
+<?php
+header('Content-Type: application/json');
+header('Access-Control-Allow-Headers: Access-Control-Allow-Headers,Content-Type,Access-Control-Allow-Methods.Authorization,X-Requested-With');
+class Categories {
+        public function __construct(){
+            $this->conn = (new db())->connect();
+        }
+        public function read(){
+            $sql = "SELECT * FROM categories";
+            $stmt = $this->conn->prepare($sql);
+            $stmt->execute();
+            $num  = $stmt->rowCount();
+            if($num > 0){
+                $data_array = [];
+                while($row = $stmt->fetch(PDO::FETCH_ASSOC)){
+                    extract($row);
+                    $data_item = array(
+                        'id'    => $id,
+                        'name'  => $name_category
+                    );
+                    array_push($data_array,$data_item);
+                }
+                return html_entity_decode( json_encode($data_array, JSON_UNESCAPED_UNICODE) );
+            }
+        }
+        public function show(){
+            $result     = json_decode(file_get_contents("php://input"));
+            $this->id   = $result->id;
+            $check      = $this->check_id();
+            if(isset($check)){
+                return html_entity_decode( json_encode(array('message' => $check)));
+            }
+            else {
+                $sql = "SELECT * FROM categories WHERE id = ? LIMIT 1";
+                $stmt = $this->conn->prepare($sql);
+                $stmt->bindParam(1,$this->id);
+                $stmt->execute();
+                $row = $stmt->fetch(PDO::FETCH_ASSOC);
+                $data_item = array(
+                    'id'    => $row['id'],
+                    'name'  => $row['name_category']
+                );
+                return html_entity_decode( json_encode($data_item, JSON_UNESCAPED_UNICODE) );
+            }
+        }
+        public function create(){
+            header('Access-Control-Allow-Methods: POST');
+            $result = json_decode(file_get_contents("php://input"));
+            $this->name = $result->name_category;
+            $query = "INSERT INTO categories SET name_category=:name";
+            $stmt = $this->conn->prepare($query);
+            $this->name = htmlspecialchars(strip_tags($this->name));
+            $stmt->bindParam(':name', $this->name);
+            if($stmt->execute()) {
+                return json_encode(array('message' => 'Created successfully'));
+            }
+            printf("Error %s.\n", $stmt->error);
+            return json_encode(array('message' => "Don't create !"));
+        }
+        public function update(){
+            header('Access-Control-Allow-Methods: PUT');
+            $result = json_decode(file_get_contents("php://input"));
+            $this->id 	= $result->id;
+            $this->name_category = $result->name_category;
+            $query = "UPDATE categories SET name_category=:name_category WHERE id=:id";
+            $stmt = $this->conn->prepare($query);
+            // clean data
+            $this->id = htmlspecialchars(strip_tags($this->id));
+            $this->name_category = htmlspecialchars(strip_tags($this->name_category));
+            // bind data
+            $stmt->bindParam(':id', $this->id);
+            $stmt->bindParam(':name_category', $this->name_category);
+            if($stmt->execute()) {
+                return json_encode(array('message' => 'Updated successfully !'));
+            }
+            printf("Error %s.\n", $stmt->error);
+            return json_encode(array('message' => 'Updated False !'));
+
+        }
+        public function delete(){
+            header('Access-Control-Allow-Methods: DELETE');
+            $result = json_decode(file_get_contents("php://input"));
+            $this->id = $result->id;
+            $check = $this->check_id();
+            if(isset($check)){
+                return html_entity_decode( json_encode(array('message' => $check)));
+            }
+            else {
+                $query = "DELETE FROM categories WHERE id=:id";
+                $stmt = $this->conn->prepare($query);
+                $this->id = htmlspecialchars(strip_tags($this->id));
+                $stmt->bindParam(':id', $this->id);
+                if($stmt->execute()) {
+                    return json_encode(array('message' => 'Deleted successfully'));
+                }
+                printf("Error %s.\n", $stmt->error);
+                return json_encode(array('message' => 'Deleted false !'));
+            }
+        }
+        public function check_id(){
+            $sql = "SELECT * FROM categories WHERE id = ? LIMIT 1";
+            $stmt = $this->conn->prepare($sql);
+            $stmt->bindParam(1,$this->id);
+            $stmt->execute();
+            $row = $stmt->fetch(PDO::FETCH_ASSOC);
+            if(!isset($row['id'])) {
+                return "Danh mục không tồn tại !";
+            }
+        }
+        public function search(){
+            if(isset($_GET['q'])){
+                if(!empty($_GET['q'])){
+                    $key = $_GET['q'];
+                    $sql = "SELECT * FROM categories  WHERE name_category LIKE '%$key%'";
+                    $stmt = $this->conn->prepare($sql);
+                    $stmt->execute();
+                    $read = $stmt;
+                    $num  = $read->rowCount();
+                    if($num > 0){
+                        $data_array = [];
+                        while($row = $read->fetch(PDO::FETCH_ASSOC)){
+                            extract($row);
+                            $data_item = array(
+                                'id'                    => $id,
+                                'name_category'         => $name_category,
+                            );
+                            array_push($data_array,$data_item);
+                        }
+                        return html_entity_decode( json_encode($data_array, JSON_UNESCAPED_UNICODE) );
+                    }
+                    else {
+                        return json_encode(array('message' => 'No data !'));
+                    }
+                }
+                else {
+                    return json_encode(array('message' => 'No data !'));
+                }
+            }
+        }
+        public function detail(){
+            if(isset($_GET['id'])){
+                if(!empty($_GET['id'])){
+                    $this->id = $_GET['id'];
+                    $check = $this->check_id();
+                    if(isset($check)){
+                        return html_entity_decode( json_encode(array('message' => $check)));
+                    }
+                    else {
+                        $sql = "SELECT * FROM categories WHERE id = ? LIMIT 1";
+                        $stmt = $this->conn->prepare($sql);
+                        $stmt->bindParam(1,$this->id);
+                        $stmt->execute();
+                        $row = $stmt->fetch(PDO::FETCH_ASSOC);
+                        $data_item = array(
+                            'id'    => $row['id'],
+                            'name'  => $row['name_category']
+                        );
+                        return html_entity_decode( json_encode($data_item, JSON_UNESCAPED_UNICODE) );
+                    }
+                }
+                else {
+                    return json_encode(array('message' => 'No data !'));
+                }
+            }
+        }
+}
+?>
\ No newline at end of file
Index: check_method.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/check_method.php b/check_method.php
new file mode 100644
--- /dev/null	(date 1669109224157)
+++ b/check_method.php	(date 1669109224157)
@@ -0,0 +1,7 @@
+<form method="post" onsubmit="return false">
+    <input type="text" name="id_category" id="id_category" placeholder="id">
+    <input type="text" name="name_category" id="name_category" placeholder="name">
+    <button id="btn" onclick="read()" type="submit">submit</button>
+</form>
+<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
+<script src="assets/handle_api/create.js"></script>
Index: assets/js/course/comment.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var url         = location.href;\r\nvar data        = [];\r\nfunction save() {\r\n    var image   = document.getElementById('image_student').value\r\n    var name    = document.getElementById('name_student').value\r\n    var checkbox = document.getElementsByName(\"rate\");\r\n    for (var i = 0; i < checkbox.length; i++){\r\n        if (checkbox[i].checked === true){\r\n            var rate    = checkbox[i].value\r\n        }\r\n    }\r\n    var content     = document.getElementById('content_rate').value\r\n    var id_course   = document.getElementById('id_course').value\r\n    var id_student  = document.getElementById('id_student').value\r\n\r\n    if(image == '' || name == '' || rate == '' || content == '' || id_course == '' || id_student == ''){\r\n        showSuccessToast('Cảnh báo', 'Vui lòng viết đánh giá và chọn sao!', 'warning')\r\n    }\r\n    else{\r\n        var send_cmt    = 'send_cmt';\r\n        var dataString  =\r\n            'send_cmt='         + send_cmt +\r\n            '&rate='            + rate +\r\n            '&id_course='       + id_course +\r\n            '&id_student='      + id_student +\r\n            '&content_rate='    + content;\r\n        $.ajax({\r\n            type: \"POST\",\r\n            url: url,\r\n            data: dataString,\r\n            success: function () {\r\n                showSuccessToast('Success', 'Cảm ơn bạn đã đánh giá khóa học', 'success')\r\n                document.getElementById('stt_cmt').innerText = 'Đã đăng';\r\n                setTimeout(function () {\r\n                    document.getElementById('stt_cmt').innerText = '';\r\n                },3000);\r\n            }\r\n        });\r\n        var item = {\r\n            name: name,\r\n            image: image,\r\n            rate: rate,\r\n            content: content\r\n        }\r\n        this.data.push(item)\r\n        show()\r\n        clear()\r\n    }\r\n}\r\nfunction show() {\r\n    if(document.getElementById('no_review')) {\r\n        document.getElementById('no_review').innerHTML = '';\r\n    }\r\n    var list = this.data.reverse();\r\n    var list_cmt = ``;\r\n    for (var i = 0; i < data.length; i++) {\r\n        list_cmt += `\r\n            <li>\r\n                <div class=\"comment_item d-flex flex-row align-items-start jutify-content-start\">\r\n                    <div class=\"comment_image\">\r\n                        <img src=\"${host}assets/uploads/students/${list[i].image}\" alt=\"Image User\">\r\n                    </div>\r\n                    <div class=\"comment_content\">\r\n                        <div class=\"comment_title_container \">\r\n                            <div class=\"d-flex align-items-center justify-content-between\">\r\n                                <div class=\"d-flex\">\r\n                                    <div class=\"comment_author\"><a href=\"#\">${list[i].name}</a></div>\r\n                                    <div class=\"Stars\" style=\"--rating: ${list[i].rate};\"></div>\r\n                                </div>\r\n                                <div class=\"comment_time\" id=\"stt_cmt\">Đang đăng</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"comment_text\"><p>${list[i].content}</p></div>\r\n                        <div class=\"comment_extras d-flex flex-row align-items-center justify-content-start\">\r\n                            <div class=\"comment_extra comment_likes\"><a href=\"#\"><i class=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i><span>0</span></a></div>&emsp;\r\n                            <div class=\"comment_extra comment_likes\"><a href=\"#\"><i class=\"fa fa-thumbs-down\" aria-hidden=\"true\"></i><span>0</span></a></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        `\r\n    }\r\n    document.getElementById('rate_list').innerHTML = list_cmt\r\n}\r\nfunction clear() {\r\n    document.getElementById('content_rate').value = \"\"\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/js/course/comment.js b/assets/js/course/comment.js
--- a/assets/js/course/comment.js	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ b/assets/js/course/comment.js	(date 1669087135241)
@@ -13,8 +13,11 @@
     var id_course   = document.getElementById('id_course').value
     var id_student  = document.getElementById('id_student').value
 
-    if(image == '' || name == '' || rate == '' || content == '' || id_course == '' || id_student == ''){
-        showSuccessToast('Cảnh báo', 'Vui lòng viết đánh giá và chọn sao!', 'warning')
+    if(rate == ''){
+        showSuccessToast('Cảnh báo', 'Vui lòng đánh giá sao!', 'warning')
+    }
+    else if(content == ''){
+        showSuccessToast('Cảnh báo', 'Vui lòng viết đánh giá của bạn!', 'warning')
     }
     else{
         var send_cmt    = 'send_cmt';
@@ -69,7 +72,7 @@
                                 </div>
                                 <div class="comment_time" id="stt_cmt">Đang đăng</div>
                             </div>
-                        </div>
+                        </div> 
                         <div class="comment_text"><p>${list[i].content}</p></div>
                         <div class="comment_extras d-flex flex-row align-items-center justify-content-start">
                             <div class="comment_extra comment_likes"><a href="#"><i class="fa fa-thumbs-up" aria-hidden="true"></i><span>0</span></a></div>&emsp;
Index: check_api.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>    <header>\r\n        <h4 class=\"title\">Live Product Filter</h4>\r\n        <div class=\"form-input\">\r\n            <i class=\"fas fa-search\"></i>\r\n            <input\r\n                type=\"text\"\r\n                id=\"filter\"\r\n                placeholder=\"Tìm sản phẩm mong muốn...\"\r\n            />\r\n        </div>\r\n    </header>\r\n    <div class=\"products\" id=\"show\">\r\n    </div>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\r\n    <script>\r\n        document.querySelector('#filter').addEventListener('input', (e) => filterData(e.target.value))\r\n        var auth = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTmd1eWVuIER1YyIsInBob25lIjoiMDgyMzU2NTgzMSIsImVtYWlsIjoibmd1eWVuZHVjMTA2MDNAZ21haWwuY29tIiwiYWRtaW4iOnRydWUsImV4cCI6MTY2OTgwNTQ4Nn0.PByr6NO_lYgDSnT-KkW0bLBgsNzfIySHO_IofdxiHsw';\r\n        function filterData(search) {\r\n            axios\r\n                .get(\"api/courses/search\", {\r\n                    headers: {\r\n                        Authorization: 'Bearer ' + auth\r\n                    },\r\n                    params: {\r\n                        name: search.toLowerCase()\r\n                    }\r\n                })\r\n                .then((res) => {\r\n                    var results = res.data\r\n                    if(results.error){\r\n                        console.log(results.error)\r\n                        return\r\n                    }\r\n                    else {\r\n                        if(results.message){\r\n                            document.querySelector('#show').innerHTML = ''\r\n                        }\r\n                        else {\r\n                            results.forEach((product) => {\r\n                                document.querySelector('#show').innerHTML = `\r\n                                    <div class=\"product\">\r\n                                        <img src=\"assets/uploads/courses/${product.image_course}\" width=\"50px\" height=\"50px\" alt=\"\">\r\n                                        <div class=\"product-detail\">\r\n                                            <h4>${product.name_course.slice(0, 30)}</h4>\r\n                                            <p>$${product.price_course}</p>\r\n                                        </div>\r\n                                    </div>\r\n                               `\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n    </script>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/check_api.php b/check_api.php
--- a/check_api.php	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ b/check_api.php	(date 1669102837317)
@@ -17,32 +17,30 @@
         var auth = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTmd1eWVuIER1YyIsInBob25lIjoiMDgyMzU2NTgzMSIsImVtYWlsIjoibmd1eWVuZHVjMTA2MDNAZ21haWwuY29tIiwiYWRtaW4iOnRydWUsImV4cCI6MTY2OTgwNTQ4Nn0.PByr6NO_lYgDSnT-KkW0bLBgsNzfIySHO_IofdxiHsw';
         function filterData(search) {
             axios
-                .get("api/courses/search", {
+                .get("api/categories", {
                     headers: {
                         Authorization: 'Bearer ' + auth
                     },
                     params: {
-                        name: search.toLowerCase()
+                        q: search.toLowerCase()
                     }
                 })
                 .then((res) => {
                     var results = res.data
+                    document.querySelector('#show').innerHTML = ""
                     if(results.error){
                         console.log(results.error)
-                        return
                     }
                     else {
                         if(results.message){
-                            document.querySelector('#show').innerHTML = ''
+                            document.querySelector('#show').innerHTML = results.message
                         }
                         else {
-                            results.forEach((product) => {
-                                document.querySelector('#show').innerHTML = `
+                            results.forEach((items) => {
+                                document.querySelector('#show').innerHTML += `
                                     <div class="product">
-                                        <img src="assets/uploads/courses/${product.image_course}" width="50px" height="50px" alt="">
                                         <div class="product-detail">
-                                            <h4>${product.name_course.slice(0, 30)}</h4>
-                                            <p>$${product.price_course}</p>
+                                            <h4>${items.name_category}</h4>
                                         </div>
                                     </div>
                                `
Index: test.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><form action=\"pay\" class=\"container\" method=\"post\">\r\n    <button class=\"btn btn-secondary\" name=\"redirect\" id=\"redirect\">Thanh toán vnpay</button>\r\n</form>\r\n\r\n<!--<div class=\"invisible-checkboxes\" id=\"date\">-->\r\n<!--    <input type=\"radio\" name=\"date_class\" value=\"1\" id=\"date1\"/>-->\r\n<!--    <label class=\"checkbox-alias\" for=\"date1\">-->\r\n<!--        Thứ <br>  2 - 4 - 6-->\r\n<!--    </label>-->\r\n<!--    <input type=\"radio\" name=\"date_class\" value=\"2\" id=\"date2\"/>-->\r\n<!--    <label class=\"checkbox-alias\" for=\"date2\">-->\r\n<!--        Thứ <br>  3 - 5 - 7-->\r\n<!--    </label>-->\r\n<!--</div>-->\r\n<!---->\r\n<!--<div class=\"invisible-checkboxes\" id=\"time\">-->\r\n<!--    <input type=\"radio\" name=\"rGroup\" value=\"1\" id=\"time1\"/>-->\r\n<!--    <label class=\"checkbox-alias\" for=\"time1\">-->\r\n<!--        Ca 1 <br> 9h00 - 11h00-->\r\n<!--    </label>-->\r\n<!--    <input type=\"radio\" name=\"rGroup\" value=\"2\" id=\"time2\"/>-->\r\n<!--    <label class=\"checkbox-alias\" for=\"time2\">-->\r\n<!--        Ca 2 <br> 14h00 - 16h00-->\r\n<!--    </label>-->\r\n<!--</div>-->\r\n<!--<style>-->\r\n<!--    .invisible-checkboxes {-->\r\n<!--        width: 100%;-->\r\n<!--        display: flex;-->\r\n<!--        justify-content: center;-->\r\n<!--        align-items: center;-->\r\n<!--    }-->\r\n<!---->\r\n<!--    .checkbox-alias{-->\r\n<!--        display: flex;-->\r\n<!--        justify-content: center;-->\r\n<!--        align-items: center;-->\r\n<!--        text-align: center;-->\r\n<!--        border: 3px solid #ccc;-->\r\n<!--        width: 120px;-->\r\n<!--        height: 50px;-->\r\n<!--        z-index: 1;-->\r\n<!--        position: relative;-->\r\n<!--        transition: all 250ms ease-out;-->\r\n<!--        cursor: pointer;-->\r\n<!--        margin: 20px;-->\r\n<!--        border-radius: 20px;-->\r\n<!--    }-->\r\n<!---->\r\n<!--    .invisible-checkboxes input[type=radio]{-->\r\n<!--        display: none;-->\r\n<!--    }-->\r\n<!---->\r\n<!--    .invisible-checkboxes input[type=radio]:checked + .checkbox-alias{-->\r\n<!--        border: 3px solid green;-->\r\n<!--        color: green;-->\r\n<!--    }-->\r\n<!--</style>-->
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test.php b/test.php
--- a/test.php	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ b/test.php	(date 1669087804864)
@@ -2,57 +2,57 @@
     <button class="btn btn-secondary" name="redirect" id="redirect">Thanh toán vnpay</button>
 </form>
 
-<!--<div class="invisible-checkboxes" id="date">-->
-<!--    <input type="radio" name="date_class" value="1" id="date1"/>-->
-<!--    <label class="checkbox-alias" for="date1">-->
-<!--        Thứ <br>  2 - 4 - 6-->
-<!--    </label>-->
-<!--    <input type="radio" name="date_class" value="2" id="date2"/>-->
-<!--    <label class="checkbox-alias" for="date2">-->
-<!--        Thứ <br>  3 - 5 - 7-->
-<!--    </label>-->
-<!--</div>-->
-<!---->
-<!--<div class="invisible-checkboxes" id="time">-->
-<!--    <input type="radio" name="rGroup" value="1" id="time1"/>-->
-<!--    <label class="checkbox-alias" for="time1">-->
-<!--        Ca 1 <br> 9h00 - 11h00-->
-<!--    </label>-->
-<!--    <input type="radio" name="rGroup" value="2" id="time2"/>-->
-<!--    <label class="checkbox-alias" for="time2">-->
-<!--        Ca 2 <br> 14h00 - 16h00-->
-<!--    </label>-->
-<!--</div>-->
-<!--<style>-->
-<!--    .invisible-checkboxes {-->
-<!--        width: 100%;-->
-<!--        display: flex;-->
-<!--        justify-content: center;-->
-<!--        align-items: center;-->
-<!--    }-->
-<!---->
-<!--    .checkbox-alias{-->
-<!--        display: flex;-->
-<!--        justify-content: center;-->
-<!--        align-items: center;-->
-<!--        text-align: center;-->
-<!--        border: 3px solid #ccc;-->
-<!--        width: 120px;-->
-<!--        height: 50px;-->
-<!--        z-index: 1;-->
-<!--        position: relative;-->
-<!--        transition: all 250ms ease-out;-->
-<!--        cursor: pointer;-->
-<!--        margin: 20px;-->
-<!--        border-radius: 20px;-->
-<!--    }-->
-<!---->
-<!--    .invisible-checkboxes input[type=radio]{-->
-<!--        display: none;-->
-<!--    }-->
-<!---->
-<!--    .invisible-checkboxes input[type=radio]:checked + .checkbox-alias{-->
-<!--        border: 3px solid green;-->
-<!--        color: green;-->
-<!--    }-->
-<!--</style>-->
\ No newline at end of file
+<div class="invisible-checkboxes" id="date">
+    <input type="radio" name="date_class" value="1" id="date1"/>
+    <label class="checkbox-alias" for="date1">
+        Thứ <br>  2 - 4 - 6
+    </label>
+    <input type="radio" name="date_class" value="2" id="date2"/>
+    <label class="checkbox-alias" for="date2">
+        Thứ <br>  3 - 5 - 7
+    </label>
+</div>
+
+<div class="invisible-checkboxes" id="time">
+    <input type="radio" name="rGroup" value="1" id="time1"/>
+    <label class="checkbox-alias" for="time1">
+        Ca 1 <br> 9h00 - 11h00
+    </label>
+    <input type="radio" name="rGroup" value="2" id="time2"/>
+    <label class="checkbox-alias" for="time2">
+        Ca 2 <br> 14h00 - 16h00
+    </label>
+</div>
+<style>
+    .invisible-checkboxes {
+        width: 100%;
+        display: flex;
+        justify-content: center;
+        align-items: center;
+    }
+
+    .checkbox-alias{
+        display: flex;
+        justify-content: center;
+        align-items: center;
+        text-align: center;
+        border: 3px solid #ccc;
+        width: 120px;
+        height: 50px;
+        z-index: 1;
+        position: relative;
+        transition: all 250ms ease-out;
+        cursor: pointer;
+        margin: 20px;
+        border-radius: 20px;
+    }
+
+    .invisible-checkboxes input[type=radio]{
+        display: none;
+    }
+
+    .invisible-checkboxes input[type=radio]:checked + .checkbox-alias{
+        border: 3px solid green;
+        color: green;
+    }
+</style>
\ No newline at end of file
Index: assets/handle_api/create.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/handle_api/create.js b/assets/handle_api/create.js
new file mode 100644
--- /dev/null	(date 1669109134150)
+++ b/assets/handle_api/create.js	(date 1669109134150)
@@ -0,0 +1,126 @@
+var auth = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTmd1eWVuIER1YyIsInBob25lIjoiMDgyMzU2NTgzMSIsImVtYWlsIjoibmd1eWVuZHVjMTA2MDNAZ21haWwuY29tIiwiYWRtaW4iOnRydWUsImV4cCI6MTY2OTgwNTQ4Nn0.PByr6NO_lYgDSnT-KkW0bLBgsNzfIySHO_IofdxiHsw';
+function create(){
+    const input = {
+        'name_category': document.getElementById('name_category').value,
+    }
+    axios.post("api/categories", input , {
+        headers: {
+            'content-type': 'application/json',
+            Authorization: 'Bearer ' + auth
+        },
+    })
+    .then((res) => {
+        console.log(res)
+    })
+    .catch((error) => {
+        console.error(error);
+    });
+}
+function read(){
+    axios.get("api/categories", {
+        headers: {
+            Authorization: 'Bearer ' + auth
+        },
+    })
+        .then((res) => {
+            console.log(res.data)
+        })
+        .catch((error) => {
+            console.error(error);
+        });
+}
+function update(){
+    const input = {
+        'id': document.getElementById('id_category').value,
+        'name_category': document.getElementById('name_category').value
+    }
+    axios.put("api/categories", input , {
+        headers: {
+            'content-type': 'application/json',
+            Authorization: 'Bearer ' + auth
+        },
+    })
+        .then((res) => {
+            console.log(res)
+        })
+        .catch((error) => {
+            console.error(error);
+        });
+}
+function destroy(){
+    const input = {
+        'id': document.getElementById('id_category').value,
+    }
+    axios
+        .delete("api/categories", {
+            headers: {
+                'content-type': 'application/json',
+                Authorization: 'Bearer ' + auth
+            },
+            data: input
+        })
+        .then((res) => {
+            console.log(res.data)
+        })
+        .catch((error) => {
+            console.error(error);
+        });
+}
+function search(){
+    document.querySelector('#filter').addEventListener('input', (e) => filterData(e.target.value))
+    function filterData(search) {
+        axios
+            .get("api/categories", {
+                headers: {
+                    Authorization: 'Bearer ' + auth
+                },
+                params: {
+                    q: search.toLowerCase()
+                }
+            })
+            .then((res) => {
+                var results = res.data
+                document.querySelector('#show').innerHTML = ""
+                if(results.error){
+                    console.log(results.error)
+                }
+                else {
+                    if(results.message){
+                        document.querySelector('#show').innerHTML = results.message
+                    }
+                    else {
+                        results.forEach((items) => {
+                            document.querySelector('#show').innerHTML += `
+                                <div class="product">
+                                    <div class="product-detail">
+                                        <h4>${items.name_category}</h4>
+                                    </div>
+                                </div>
+                               `
+                        })
+                    }
+                }
+            })
+            .catch((error) => {
+                console.error(error);
+            });
+    }
+}
+function detail(){
+    axios
+        .get("api/categories", {
+            headers: {
+                Authorization: 'Bearer ' + auth
+            },
+            params: {
+                id: document.getElementById('id_category').value
+            }
+        })
+        .then((res) => {
+            console.clear()
+            console.log(res.data)
+        })
+        .catch((error) => {
+            console.error(error);
+        });
+}
\ No newline at end of file
Index: api_dir/courses.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api_dir/courses.php b/api_dir/courses.php
new file mode 100644
--- /dev/null	(date 1669092850451)
+++ b/api_dir/courses.php	(date 1669092850451)
@@ -0,0 +1,157 @@
+<?php
+
+class courses {
+    public function __construct(){
+        $this->conn = (new db())->connect();
+    }
+    public function read(){
+//        header('Access-Control-Allow-Methods: GET');
+        $sql = "SELECT * FROM courses";
+        $stmt = $this->conn->prepare($sql);
+        $stmt->execute();
+        $num  = $stmt->rowCount();
+        if($num > 0){
+            $data_array = [];
+            while($row = $stmt->fetch(PDO::FETCH_ASSOC)){
+                extract($row);
+                $data_item = array(
+                    'id'                    => $id,
+                    'name_course'           => $name_course,
+                    'price_course'          => $price_course,
+                    'image_course'          => $image_course,
+                    'status_course'         => $status_course,
+                    'description_course'    => $description_course,
+                    'quote'                 => $quote,
+                    'discount'              => $discount,
+                    'created_at'            => $created_at,
+                    'updated_at'            => $updated_at,
+                    'id_category '          => $id_category,
+                    'id_teacher '           => $id_teacher,
+                );
+                array_push($data_array,$data_item);
+            }
+            return html_entity_decode( json_encode($data_array, JSON_UNESCAPED_UNICODE) );
+        }
+    }
+
+    public function show(){
+        header('Access-Control-Allow-Methods: GET');
+        $result     = json_decode(file_get_contents("php://input"));
+        $this->id   = $result->id;
+        $check      = $this->check_id();
+        if(isset($check)){
+            return json_encode(array('message' => $check));
+        }
+        else {
+            $sql = "SELECT * FROM courses WHERE id = ? LIMIT 1";
+            $stmt = $this->conn->prepare($sql);
+            $stmt->bindParam(1,$this->id);
+            $stmt->execute();
+            $row = $stmt->fetch(PDO::FETCH_ASSOC);
+            $data_item = array(
+                'id'            => $row['id'],
+                'name_course'   => $row['name_course']
+            );
+            return html_entity_decode( json_encode($data_item, JSON_UNESCAPED_UNICODE) );
+        }
+    }
+
+    public function create(){
+        $query = "INSERT INTO categories SET name_category=:name";
+        $stmt = $this->conn->prepare($query);
+        // clean data
+        $this->name = htmlspecialchars(strip_tags($this->name));
+        // bind data
+        $stmt->bindParam(':name', $this->name);
+        if($stmt->execute()) {
+            return true;
+        }
+        printf("Error %s.\n", $stmt->error);
+        return false;
+    }
+
+    public function update(){
+        $query = "UPDATE categories SET name_category=:name WHERE id=:id";
+        $stmt = $this->conn->prepare($query);
+        // clean data
+        $this->id = htmlspecialchars(strip_tags($this->id));
+        $this->name = htmlspecialchars(strip_tags($this->name));
+        // bind data
+        $stmt->bindParam(':id', $this->id);
+        $stmt->bindParam(':name', $this->name);
+        if($stmt->execute()) {
+            return true;
+        }
+        printf("Error %s.\n", $stmt->error);
+        return false;
+    }
+
+    public function delete(){
+        $query = "DELETE FROM categories WHERE id=:id";
+        $stmt = $this->conn->prepare($query);
+        // clean data
+        $this->id = htmlspecialchars(strip_tags($this->id));
+        // bind data
+        $stmt->bindParam(':id', $this->id);
+        if($stmt->execute()) {
+            return true;
+        }
+        printf("Error %s.\n", $stmt->error);
+        return false;
+    }
+
+    public function search(){
+        header('Access-Control-Allow-Methods: GET');
+        $data = new Courses((new db())->connect());
+        if(isset($_GET['name'])){
+            if(!empty($_GET['name'])){
+                $key = $_GET['name'];
+                $sql = "SELECT * FROM courses  WHERE name_course LIKE '%$key%'";
+                $stmt = $this->conn->prepare($sql);
+                $stmt->execute();
+                $read = $stmt;
+                $num  = $read->rowCount();
+                if($num > 0){
+                    $data_array = [];
+                    while($row = $read->fetch(PDO::FETCH_ASSOC)){
+                        extract($row);
+                        $data_item = array(
+                            'id'                    => $id,
+                            'name_course'           => $name_course,
+                            'price_course'          => $price_course,
+                            'image_course'          => $image_course,
+                            'status_course'         => $status_course,
+                            'description_course'    => $description_course,
+                            'quote'                 => $quote,
+                            'discount'              => $discount,
+                            'created_at'            => $created_at,
+                            'updated_at'            => $updated_at,
+                            'id_category '          => $id_category,
+                            'id_teacher '           => $id_teacher,
+                        );
+                        array_push($data_array,$data_item);
+                    }
+                    return html_entity_decode( json_encode($data_array, JSON_UNESCAPED_UNICODE) );
+                }
+                else {
+                    return json_encode(array('message' => 'No data !'));
+                }
+            }
+            else {
+                return json_encode(array('message' => 'No data !'));
+            }
+        }
+    }
+
+    public function check_id(){
+        $sql = "SELECT * FROM courses WHERE id = ? LIMIT 1";
+        $stmt = $this->conn->prepare($sql);
+        $stmt->bindParam(1,$this->id);
+        $stmt->execute();
+        $row = $stmt->fetch(PDO::FETCH_ASSOC);
+        if(!isset($row['id'])) {
+            return "Khóa học không tồn tại !";
+        }
+    }
+}
+?>
\ No newline at end of file
Index: api.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n    require_once 'auth/auth_api.php';\r\n    require_once 'api/db_conn.php';\r\n    require_once 'routes/route_api.php';\r\n?>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api.php b/api.php
--- a/api.php	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ b/api.php	(date 1669093072563)
@@ -1,5 +1,38 @@
 <?php
+header('Content-Type: application/json');
+header('Access-Control-Allow-Headers: Access-Control-Allow-Headers,Content-Type,Access-Control-Allow-Methods.Authorization,X-Requested-With');
+    $dir_api = 'api_dir/';
     require_once 'auth/auth_api.php';
-    require_once 'api/db_conn.php';
-    require_once 'routes/route_api.php';
+    // tạo jwt
+    $payload = array (
+        'name'  => 'Nguyen Duc',
+        'phone' => '0823565831',
+        'email' => 'nguyenduc10603@gmail.com',
+        'admin' => true,
+        'exp'   => time() + (86400 * 10)
+    );
+    $jwt = generate_jwt($payload);
+    $bearer_token = get_bearer_token();
+    if(empty($bearer_token)){
+        echo json_encode(array(
+            'error' => 'Access denied !',
+        ));
+    }else {
+        $is_jwt_valid = is_jwt_valid($bearer_token);
+        if($is_jwt_valid == true) {
+            $auth = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTmd1eWVuIER1YyIsInBob25lIjoiMDgyMzU2NTgzMSIsImVtYWlsIjoibmd1eWVuZHVjMTA2MDNAZ21haWwuY29tIiwiYWRtaW4iOnRydWUsImV4cCI6MTY2OTgwNTQ4Nn0.PByr6NO_lYgDSnT-KkW0bLBgsNzfIySHO_IofdxiHsw';
+            if($bearer_token == $auth) {
+                require_once $dir_api.'db_conn.php';
+                require_once 'routes/route_api.php';
+            } else {
+                echo json_encode(array(
+                    'error' => 'Access denied !'
+                ));
+            }
+        } else {
+            echo json_encode(array(
+                'error' => 'Access denied !'
+            ));
+        }
+    }
 ?>
\ No newline at end of file
Index: .htaccess
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Order Deny,Allow\r\n#Deny from all\r\n#Allow from 171.224.177.225\r\nErrorDocument 404 http://localhost/courses/page_not_found\r\n#DirectoryIndex admin.php\r\nRewriteEngine On\r\nRewriteCond %{REQUEST_FILENAME} !-d\r\nRewriteCond %{REQUEST_FILENAME} !-f\r\nRewriteRule ^page_not_found$ views/404.php\r\nRewriteRule ^account/([a-zA-Z0-9_-]+)$                                            account.php?a=$1\r\n# RewriteRule ^sign_up$                                                   views/account/sign_up.php\r\n# RewriteRule ^forgot_pass$                                               views/account/forgot_pass.php\r\n# RewriteRule ^reset_pass$                                                views/account/reset_pass.php\r\n#RewriteRule ^sign_in$                                                   views/account/sign_in.php\r\n#RewriteRule ^sign_up$                                                   views/account/sign_up.php\r\n#RewriteRule ^forgot_pass$                                               views/account/forgot_pass.php\r\n#RewriteRule ^reset_pass$                                                views/account/reset_pass.php\r\n\r\n\r\nRewriteRule ^api$                                                       api.php\r\nRewriteRule ^api/([a-zA-Z0-9_-]+)$                                      api.php?module=$1               [QSA,L]\r\nRewriteRule ^api/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$                     api.php?module=$1&act=$2        [QSA,L]\r\nRewriteRule ^api/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$    api.php?module=$1&act=$2&id=$3  [QSA,L]\r\n\r\nRewriteRule ^pay$                                                       pay.php [QSA,L]\r\nRewriteRule ^pay/status$                                                pay.php?req_pay=status [QSA,L]\r\nRewriteRule ^account/([a-zA-Z0-9_-]+)$                                  account.php?act_acc=$1 [QSA,L]\r\nRewriteRule ^login$                                                     login.php\r\nRewriteRule ^admin$                                                     admin.php\r\nRewriteRule ^admin/([a-zA-Z0-9_-]+)$                                    admin.php?module=$1 [QSA,L]\r\nRewriteRule ^admin/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$                   admin.php?module=$1&act=$2 [QSA,L]\r\nRewriteRule ^admin/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$  admin.php?module=$1&act=$2&id=$3 [QSA,L]\r\nRewriteRule ^home$                                                      index.php\r\nRewriteRule ^([a-zA-Z0-9_-]+)$                                          index.php?v=$1 [QSA,L]\r\nRewriteRule ^([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$                         index.php?v=$1&id=$2 [QSA,L]\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.htaccess b/.htaccess
--- a/.htaccess	(revision f6c28a87672574dc600ac7a0c4e9c5b13423068f)
+++ b/.htaccess	(date 1669088007190)
@@ -7,7 +7,7 @@
 RewriteCond %{REQUEST_FILENAME} !-d
 RewriteCond %{REQUEST_FILENAME} !-f
 RewriteRule ^page_not_found$ views/404.php
-RewriteRule ^account/([a-zA-Z0-9_-]+)$                                            account.php?a=$1
+RewriteRule ^account/([a-zA-Z0-9_-]+)$                                    account.php?a=$1
 # RewriteRule ^sign_up$                                                   views/account/sign_up.php
 # RewriteRule ^forgot_pass$                                               views/account/forgot_pass.php
 # RewriteRule ^reset_pass$                                                views/account/reset_pass.php
@@ -17,7 +17,7 @@
 #RewriteRule ^reset_pass$                                                views/account/reset_pass.php
 
 
-RewriteRule ^api$                                                       api.php
+RewriteRule ^apis$                                                      api.php
 RewriteRule ^api/([a-zA-Z0-9_-]+)$                                      api.php?module=$1               [QSA,L]
 RewriteRule ^api/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$                     api.php?module=$1&act=$2        [QSA,L]
 RewriteRule ^api/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)/([a-zA-Z0-9_-]+)$    api.php?module=$1&act=$2&id=$3  [QSA,L]
diff --git a/api/db_conn.php b/api_dir/db_conn.php
rename from api/db_conn.php
rename to api_dir/db_conn.php
